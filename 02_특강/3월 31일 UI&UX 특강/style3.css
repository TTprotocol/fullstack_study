.grid_container {
    display: grid;

    /* 
    열의 너비를 지정 
    각 열 별로 띄워쓴다. => 띄워진 개수 = 열의 개수
    */
    grid-template-columns: 100px 100px 100px;

    /* 
    행의 높이를 지정
    각 행 별로 띄워쓴다. => 띄워진 개수 = 헹의 개수
    */
    grid-template-rows: 100px 100px;

    /* 동일한 크기인 경우, repeat로 한꺼번에 쓸 수 있다. */
    /* grid-template-rows: repeaet(2, 100px); */

    /* minmax(최소, 최대) : 최소 크기와 최대 크기를 지정해 줄 수 있다. */
    /* grid-template-rows: minmax(100px, auto); */

    /* repeat(2, minmax(최소, 최대)) : 과 같이 repeat와 minmax를 같이 적을 수도 있다. */
    /* grid-template-rows: repeat(2, minmax(최소, 최대) 100px); */

    grid-auto-rows: 100px;

    /* 
    column-gap : 열과 열 사이를 띄우는 속성
    */
    column-gap: 1rem;

    /* 
    row-gap : 행과 행 사이를 띄우는 속성
    */
    row-gap: 1rem;

    /* 
    justify-items : 그리드를 수평 방향으로 정렬하는 속성
    start : 그리드 셀을 기준으로 시작지점으로 정렬.
    center : 가운데로 정렬
    end : 끝으로 정렬
    * flex-start, flex-end도 쓰면 쓸 수 있다 => css의 문법적 허용
    */
    /* justify-items: start; */

    /* 
    align-items : 그리드를 수직 방향으로 정렬하는 속성
    */
    /* align-items: start; */
}

.grid_item {
    color: white;
    background-color: #ff5252;
}

.grid_item:nth-child(2n) {
    background-color: #bf5e5e;
}

.grid_item:nth-child(3n) {
    background-color: green;
}

.grid_item:nth-child(4n) {
    background-color: orange;
}

.item2 {
    /* 
    grid-column-start ~ grid-column-end : 그리드 열의 시작 지점부터 종료 지점까지 하나의 셀로 합친다.
    */
    /* grid-column-start: 2;
    grid-column-end: 4; */

    /* 한 번에 입력한다. */
    /* grid-column: 2 / 4; */

    /* 2번 라인부터 2칸 쓴다. */
    grid-column: 2 / span 2;

    /* 
    grid-row-start ~ grid-row-end : 그리드 행의 시작 지점부터 종료 지점까지 하나의 셀로 합친다.
    */
    /* grid-row-start: 1;
    grid-row-end: 3; */

    /* 한 번에 입력한다. */
    /* grid-row: 1 / 3; */

    /* 1번 라인부터 2칸 쓴다. */
    grid-row: 1 / span 2;
}
