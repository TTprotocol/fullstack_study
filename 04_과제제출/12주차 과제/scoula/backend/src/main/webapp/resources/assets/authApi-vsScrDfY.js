import{l as u,u as n,m as c}from"./index-B4q-7UrM.js";const r=u.create({timeout:1e3});r.interceptors.request.use(a=>{const{getToken:e}=n(),t=e();return t&&(a.headers.Authorization=`Bearer ${t}`,console.log(a.headers.Authorization)),a},a=>Promise.reject(a));r.interceptors.response.use(a=>a.status===200?a:a.status===404?Promise.reject("404: 페이지 없음 "+a.request):a,async a=>{var e;if(((e=a.response)==null?void 0:e.status)===401){const{logout:t}=n();return t(),c.push("/auth/login?error=login_required"),Promise.reject({error:"로그인이 필요한 서비스입니다."})}return Promise.reject(a)});const s="/api/member",o={"Content-Type":"multipart/form-data"},p={async checkUsername(a){const{data:e}=await r.get(`${s}/checkusername/${a}`);return console.log("AUTH GET CHECKUSERNAME",e),e},async create(a){console.log("member.username: ",a.username),console.log("member.email: ",a.email),console.log("member.password: ",a.password);const e=new FormData;e.append("username",a.username),e.append("email",a.email),e.append("password",a.password),a.avatar&&e.append("avatar",a.avatar);const{data:t}=await r.post(s,e,o);return console.log("AUTH POST: ",t),t},async update(a){const e=new FormData;e.append("username",a.username),e.append("password",a.password),e.append("email",a.email),a.avatar&&e.append("avatar",a.avatar);const{data:t}=await r.put(`${s}/${a.username}`,e,o);return console.log("AUTH PUT: ",t),t}};export{p as a};
