.flexContainer {
    width: 300px;
    height: 200px;
    background-color: #c4c4c4;
    border: 1px solid black;

    /* 
    하위 요소에 flexable을 주기 위해서 부모에 display: flex를 적용해야 한다.
    하위 요소의 원 속성을 무시하고 flexable item으로 변환시킨다.

    flex item의 너비는 요소가 가질 수 있는 최소한의 너비로 변경된다.
    */
    display: flex;

    /* 
    flex-direction : 주축의 방향을 바꾼다. default : column 
    -reverse : 주축의 방향을 뒤집을 수 있다. (row-reverse/column-reverse)
    */
    flex-direction: row;

    /* 
    flex-wrap : 자동으로 줄바꿈을 할지 결정한다. (default: no-wrap)
    -reverse : 역방향으로 줄바꿈을 한다.
    */
    flex-wrap: wrap;

    /* 
    flex-flow : flex-direction + flex-wrap. 두 속성을 한번에 쓸 수 있다.

    */
    /* flex-flow: row wrap; */

    /* 
    justify-content : flex item들을 정렬하기 위한 코드. (default : flex-start) 주축 방향으로 정렬시킨다.
    flex-end : 제일 뒤로 배치
    center : 가운데로 배치.
    space-between : 좌우로 딱 붙인 후 나머지 공간을 균등하게 배치.
    space-around : 모든 아이템의 좌우 간격을 동일하게 만든다. (그러나 양 끝을 제외한 나머지 요소들은 간격이 2배로 보인다.)
    space-evenly : 모든 여백을 동일하게 배치한다.
    */
    justify-content: space-evenly;

    /* 
    align-items : 교차축 방향으로 정렬시킨다. (deafult : stretch)
    stretch : 아이템 높이만큼 정렬시킨다. 단, 요소에 높이가 없어야 한다.
    flex-start : 교차축 방향에서 시작점에 배치
    flex-end : 교차축 방향에서 끝점에 배치
    center : 가운데 배치

    */
    align-items: center;
}

.flexItem {
    color: white;
    background-color: #ff5252;

    /* 
    flexContainer가 300px 이므로, flexItem이 6개가 있으면 딱 다 채우게 된다.
    그러나 flexItem이 7개 이상 늘어난다면, flexItem은 50ox이 아닌 것 처럼 너비가 줄어들게 된다
    => flexable item은 부모의 크기에 맞게 자동으로 줄어든다.
    */
    width: 50px;
    /* height: 50px; */

    /* 
    flex-shrink : flex-item에만 쓸 수 있다. 공간이 부족해도 본인의 본래 너비를 차지한다. (부모를 삐져나간다.)
    */
    flex-shrink: 0;

    /* 
    flex-grow : 요소가 나머지 빈 여백을 모두 차지하게 된다.
    */
    flex-grow: 1;
}

.flexItem:nth-child(2n) {
    background-color: #bf5e5e;
}
