import{l as u,u as n,m as c}from"./index-B5mOce5k.js";const r=u.create({timeout:1e3});r.interceptors.request.use(a=>{const{getToken:t}=n(),e=t();return e&&(a.headers.Authorization=`Bearer ${e}`,console.log(a.headers.Authorization)),a},a=>(console.log("요청 중 에러 발생"),Promise.reject(a)));r.interceptors.response.use(a=>a.status===200?a:a.status===404?Promise.reject("404: 페이지 없음 "+a.request):a,async a=>{var t;if(console.log("응답 중 에러 발생"),((t=a.response)==null?void 0:t.status)===401){const{logout:e}=n();return e(),c.push("/auth/login?error=login_required"),Promise.reject({error:"로그인이 필요한 서비스입니다."})}return Promise.reject(a)});const o="/api/member",s={"Content-Type":"multipart/form-data"},p={async checkUsername(a){const{data:t}=await r.get(`${o}/checkusername/${a}`);return console.log("AUTH GET CHECKUSERNAME",t),t},async create(a){const t=new FormData;t.append("username",a.username),t.append("email",a.email),t.append("password",a.password),a.avatar&&t.append("avatar",a.avatar);const{data:e}=await r.post(o,t,s);return console.log("AUTH POST: ",e),e},async update(a){const t=new FormData;t.append("username",a.username),t.append("password",a.password),t.append("email",a.email),a.avatar&&t.append("avatar",a.avatar);const{data:e}=await r.put(`${o}/${a.username}`,t,s);return console.log("AUTH PUT: ",e),e}};export{p as a};
